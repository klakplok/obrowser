OCAMLOPT = ocamlopt

.PHONY: clean all install uninstall lib jsrun

export BINDIR ?= $(dir $(shell which ocamlfind))
export LIBDIR ?= $(shell ocamlfind printconf destdir)

export DEBUG ?= NO

GEN=config.ml
BIN=obrowserc ocamldasm

all: obrowserc ocamldasm

ocamldasm: \
  config.cmx utils.cmx messages.cmx \
  types.cmx reader.cmx bc_emit.cmx
	$(OCAMLOPT) -g $^ -o $@

obrowserc: \
  config.cmx utils.cmx messages.cmx \
  types.cmx reader.cmx analysis.cmx stack_to_vars.cmx \
  optimizations.cmx js_emit.cmx obrowserc.cmx
	$(OCAMLOPT) -g $^ -o $@

%.cmx: %.ml
	$(OCAMLOPT) -g -c $< -o $@

%.cmi: %.mli
	$(OCAMLOPT) -g -c $< -o $@

config.ml: Makefile
	@echo "generating config.ml"
	@echo "(* AUTOGENERATED FILE, DO NOT EDIT *)" > config.ml
	@echo "let path = \"$(LIBDIR)/obrowser\" ;;" >> config.ml
	@echo "let max_opt_passes = ref 50 ;;" >> config.ml
	@if [ "$(DEBUG)" = "YES" ] ; then \
          echo "let debug_mode = ref 0 ;;" >> config.ml ; \
          echo "let show_time_limit = ref 0.2 ;;" >> config.ml ; \
        else \
          echo "let debug_mode = ref (-1) ;;" >> config.ml ; \
          echo "let show_time_limit = ref infinity ;;" >> config.ml ; \
        fi

lib:
	@cd lib && $(MAKE)

jsrun:
	@cd jsrun && $(MAKE)

clean:
	@echo "cleaning"
	@-rm -f $(GEN) *~ *.cm* *.o
	@cd lib && $(MAKE) clean
	@cd jsrun && $(MAKE) clean
	@-rm -f $(BIN)

.depend: $(SOURCES)
	ocamldep $(SOURCES) > $@

-include .depend

install: all
	-mkdir -p $(BINDIR)
	-mkdir -p $(LIBDIR)/obrowser
	@cd lib && $(MAKE) install
	@cd jsrun && $(MAKE) install
	install obrowserc $(BINDIR)/obrowserc

uninstall:
	@cd lib && $(MAKE) uninstall
	@cd jsrun && $(MAKE) uninstall
	-rm $(BINDIR)/obrowserc
	-rmdir $(BINDIR)
	-rmdir $(LIBDIR)/obrowser
